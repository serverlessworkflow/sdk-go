# Copyright 2020 The Serverless Workflow Specification Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

id: custom.greeting
version: '1.0'
specVersion: "0.8"
description: Greet Someone
# name: Greeting example #can be empty
# start: Greet #can be empty
functions:
  - name: greetingCustomFunction
    operation: /path/to/my/script/greeting.ts#CustomGreeting
    # Support custom function type definition
    type: custom
  - name: sendTextFunction
    operation: http://myapis.org/inboxapi.json#sendText
    type: graphql
  - name: greetingFunction
    operation: file://myapis/greetingapis.json#greeting
states:
  - name: GreetDelay
    type: delay
    timeDelay: PT5S
    transition:
      nextState: StoreCarAuctionBid
  - name: StoreCarAuctionBid
    type: event
    exclusive: true
    onEvents:
      - eventRefs:
          - CarBidEvent
        eventDataFilter:
          useData: true
          data: "test"
          toStateData: "testing"
        actionMode: parallel
        actions:
          - functionRef:
              refName: StoreBidFunction
              arguments:
                bid: "${ .bid }"
    timeouts:
      eventTimeout: PT1H
      actionExecTimeout: PT3S
      stateExecTimeout:
        total: PT1S
        single: PT2S
  - name: ParallelExec
    type: parallel
    completionType: allOf
    branches:
      - name: ShortDelayBranch
        actions:
          - subFlowRef: shortdelayworkflowid
        timeouts:
          actionExecTimeout: "PT5H"
          branchExecTimeout: "PT6M"
      - name: LongDelayBranch
        actions:
          - subFlowRef: longdelayworkflowid
    timeouts:
      branchExecTimeout: "PT6M"
      stateExecTimeout:
        total: PT1S
        single: PT2S
  - name: CheckVisaStatusSwitchEventBased
    type: switch
    eventConditions:
      - eventRef: visaApprovedEvent
        transition: HandleApprovedVisa
      - eventRef: visaRejectedEvent
        transition: HandleRejectedVisa
    timeouts:
      eventTimeout: PT1H
      stateExecTimeout:
        total: PT1S
        single: PT2S
    defaultCondition:
      transition: HandleNoVisaDecision
  - name: CheckApplicationSwitchDataBased
    type: switch
    dataConditions:
      - condition: "${ .applicants | .age >= 18 }"
        transition:
          nextState: StartApplication
    defaultCondition:
      transition: RejectApplication
    stateExecTimeout:
      total: PT1S
      single: PT2S
  - name: GreetSequential
    type: operation
    actionMode: sequential
    actions:
      - name: greetingCustomFunction
        functionRef:
          refName: greetingCustomFunction
          parameters:
            name: "${ .greet | .name }"
        actionDataFilter:
          dataResultsPath: "${ .payload | .greeting }"
        eventRef:
          triggerEventRef: example
          resultEventRef: example
          # Added "resultEventTimeout" for action eventref
          resultEventTimeout: PT1H
    timeouts:
      actionExecTimeout: PT1H
      stateExecTimeout:
        total: PT1S
        single: PT2S
    stateDataFilter:
      dataOutputPath: "${ .greeting }"
    transition: SendTextForHighPriority
  - name: SendTextForHighPriority
    type: foreach
    inputCollection: "${ .messages }"
    actions:
      - name: test
        functionRef:
          refName: sendTextFunction
          arguments:
            message: "${ .singlemessage }"
        eventRef:
          triggerEventRef: example1
          resultEventRef: example1
          # Added "resultEventTimeout" for action eventref
          resultEventTimeout: PT12H
    timeouts:
      actionExecTimeout: PT11H
      stateExecTimeout:
        total: PT11S
        single: PT22S
  - name: HelloInject
    type: inject
    data:
      result: Hello World, last state!
    timeouts:
      stateExecTimeout:
        total: PT11M
        single: PT22M
  - name: CheckCreditCallback
    type: callback
    action:
      functionRef:
        refName: callCreditCheckMicroservice
        arguments:
          customer: "${ .customer }"
      sleep:
        before: PT10S
        after: PT20S
    eventRef: CreditCheckCompletedEvent
    timeouts:
      actionExecTimeout: PT150M
      eventTimeout: PT34S
      stateExecTimeout:
        total: PT115M
        single: PT22M
  - name: WaitForCompletionSleep
    type: sleep
    duration: PT5S
    transition: GetJobStatus
    timeouts:
      stateExecTimeout:
        total: PT100S
        single: PT200S
    end: true
