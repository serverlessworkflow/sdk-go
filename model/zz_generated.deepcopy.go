//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2022 The Serverless Workflow Specification Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// Code generated by deepcopy-gen. DO NOT EDIT.

package model

import (
	json "encoding/json"

	floatstr "github.com/serverlessworkflow/sdk-go/v2/util/floatstr"
	intstr "k8s.io/apimachinery/pkg/util/intstr"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Action) DeepCopyInto(out *Action) {
	*out = *in
	if in.FunctionRef != nil {
		in, out := &in.FunctionRef, &out.FunctionRef
		*out = new(FunctionRef)
		(*in).DeepCopyInto(*out)
	}
	if in.EventRef != nil {
		in, out := &in.EventRef, &out.EventRef
		*out = new(EventRef)
		(*in).DeepCopyInto(*out)
	}
	if in.SubFlowRef != nil {
		in, out := &in.SubFlowRef, &out.SubFlowRef
		*out = new(WorkflowRef)
		**out = **in
	}
	out.Sleep = in.Sleep
	if in.NonRetryableErrors != nil {
		in, out := &in.NonRetryableErrors, &out.NonRetryableErrors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RetryableErrors != nil {
		in, out := &in.RetryableErrors, &out.RetryableErrors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.ActionDataFilter = in.ActionDataFilter
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Action.
func (in *Action) DeepCopy() *Action {
	if in == nil {
		return nil
	}
	out := new(Action)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionDataFilter) DeepCopyInto(out *ActionDataFilter) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionDataFilter.
func (in *ActionDataFilter) DeepCopy() *ActionDataFilter {
	if in == nil {
		return nil
	}
	out := new(ActionDataFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Auth) DeepCopyInto(out *Auth) {
	*out = *in
	if in.Properties != nil {
		out.Properties = in.Properties.DeepCopyAuthProperties()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Auth.
func (in *Auth) DeepCopy() *Auth {
	if in == nil {
		return nil
	}
	out := new(Auth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in AuthArray) DeepCopyInto(out *AuthArray) {
	{
		in := &in
		*out = make(AuthArray, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthArray.
func (in AuthArray) DeepCopy() AuthArray {
	if in == nil {
		return nil
	}
	out := new(AuthArray)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseAuthProperties) DeepCopyInto(out *BaseAuthProperties) {
	*out = *in
	in.Common.DeepCopyInto(&out.Common)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseAuthProperties.
func (in *BaseAuthProperties) DeepCopy() *BaseAuthProperties {
	if in == nil {
		return nil
	}
	out := new(BaseAuthProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseState) DeepCopyInto(out *BaseState) {
	*out = *in
	if in.OnErrors != nil {
		in, out := &in.OnErrors, &out.OnErrors
		*out = make([]OnError, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Transition != nil {
		in, out := &in.Transition, &out.Transition
		*out = new(Transition)
		(*in).DeepCopyInto(*out)
	}
	if in.StateDataFilter != nil {
		in, out := &in.StateDataFilter, &out.StateDataFilter
		*out = new(StateDataFilter)
		**out = **in
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(End)
		(*in).DeepCopyInto(*out)
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(Metadata)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]Object, len(*in))
			for key, val := range *in {
				(*out)[key] = *val.DeepCopy()
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseState.
func (in *BaseState) DeepCopy() *BaseState {
	if in == nil {
		return nil
	}
	out := new(BaseState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseWorkflow) DeepCopyInto(out *BaseWorkflow) {
	*out = *in
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(Start)
		(*in).DeepCopyInto(*out)
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataInputSchema != nil {
		in, out := &in.DataInputSchema, &out.DataInputSchema
		*out = new(DataInputSchema)
		(*in).DeepCopyInto(*out)
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make(Secrets, len(*in))
		copy(*out, *in)
	}
	if in.Constants != nil {
		in, out := &in.Constants, &out.Constants
		*out = new(Constants)
		(*in).DeepCopyInto(*out)
	}
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(Timeouts)
		(*in).DeepCopyInto(*out)
	}
	if in.Errors != nil {
		in, out := &in.Errors, &out.Errors
		*out = make([]Error, len(*in))
		copy(*out, *in)
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(Metadata, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = make(AuthArray, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseWorkflow.
func (in *BaseWorkflow) DeepCopy() *BaseWorkflow {
	if in == nil {
		return nil
	}
	out := new(BaseWorkflow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthProperties) DeepCopyInto(out *BasicAuthProperties) {
	*out = *in
	in.BaseAuthProperties.DeepCopyInto(&out.BaseAuthProperties)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthProperties.
func (in *BasicAuthProperties) DeepCopy() *BasicAuthProperties {
	if in == nil {
		return nil
	}
	out := new(BasicAuthProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BearerAuthProperties) DeepCopyInto(out *BearerAuthProperties) {
	*out = *in
	in.BaseAuthProperties.DeepCopyInto(&out.BaseAuthProperties)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BearerAuthProperties.
func (in *BearerAuthProperties) DeepCopy() *BearerAuthProperties {
	if in == nil {
		return nil
	}
	out := new(BearerAuthProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Branch) DeepCopyInto(out *Branch) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]Action, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(BranchTimeouts)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Branch.
func (in *Branch) DeepCopy() *Branch {
	if in == nil {
		return nil
	}
	out := new(Branch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchTimeouts) DeepCopyInto(out *BranchTimeouts) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchTimeouts.
func (in *BranchTimeouts) DeepCopy() *BranchTimeouts {
	if in == nil {
		return nil
	}
	out := new(BranchTimeouts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CallbackState) DeepCopyInto(out *CallbackState) {
	*out = *in
	in.BaseState.DeepCopyInto(&out.BaseState)
	in.Action.DeepCopyInto(&out.Action)
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(CallbackStateTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.EventDataFilter = in.EventDataFilter
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CallbackState.
func (in *CallbackState) DeepCopy() *CallbackState {
	if in == nil {
		return nil
	}
	out := new(CallbackState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CallbackStateTimeout) DeepCopyInto(out *CallbackStateTimeout) {
	*out = *in
	if in.StateExecTimeout != nil {
		in, out := &in.StateExecTimeout, &out.StateExecTimeout
		*out = new(StateExecTimeout)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CallbackStateTimeout.
func (in *CallbackStateTimeout) DeepCopy() *CallbackStateTimeout {
	if in == nil {
		return nil
	}
	out := new(CallbackStateTimeout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Common) DeepCopyInto(out *Common) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(Metadata, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Common.
func (in *Common) DeepCopy() *Common {
	if in == nil {
		return nil
	}
	out := new(Common)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Constants) DeepCopyInto(out *Constants) {
	*out = *in
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make(map[string]json.RawMessage, len(*in))
		for key, val := range *in {
			var outVal []byte
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(json.RawMessage, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Constants.
func (in *Constants) DeepCopy() *Constants {
	if in == nil {
		return nil
	}
	out := new(Constants)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinueAs) DeepCopyInto(out *ContinueAs) {
	*out = *in
	in.Data.DeepCopyInto(&out.Data)
	out.WorkflowExecTimeout = in.WorkflowExecTimeout
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinueAs.
func (in *ContinueAs) DeepCopy() *ContinueAs {
	if in == nil {
		return nil
	}
	out := new(ContinueAs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Correlation) DeepCopyInto(out *Correlation) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Correlation.
func (in *Correlation) DeepCopy() *Correlation {
	if in == nil {
		return nil
	}
	out := new(Correlation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cron) DeepCopyInto(out *Cron) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cron.
func (in *Cron) DeepCopy() *Cron {
	if in == nil {
		return nil
	}
	out := new(Cron)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCondition) DeepCopyInto(out *DataCondition) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(Metadata, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(End)
		(*in).DeepCopyInto(*out)
	}
	if in.Transition != nil {
		in, out := &in.Transition, &out.Transition
		*out = new(Transition)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCondition.
func (in *DataCondition) DeepCopy() *DataCondition {
	if in == nil {
		return nil
	}
	out := new(DataCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataInputSchema) DeepCopyInto(out *DataInputSchema) {
	*out = *in
	if in.FailOnValidationErrors != nil {
		in, out := &in.FailOnValidationErrors, &out.FailOnValidationErrors
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataInputSchema.
func (in *DataInputSchema) DeepCopy() *DataInputSchema {
	if in == nil {
		return nil
	}
	out := new(DataInputSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultCondition) DeepCopyInto(out *DefaultCondition) {
	*out = *in
	if in.Transition != nil {
		in, out := &in.Transition, &out.Transition
		*out = new(Transition)
		(*in).DeepCopyInto(*out)
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(End)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultCondition.
func (in *DefaultCondition) DeepCopy() *DefaultCondition {
	if in == nil {
		return nil
	}
	out := new(DefaultCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelayState) DeepCopyInto(out *DelayState) {
	*out = *in
	in.BaseState.DeepCopyInto(&out.BaseState)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelayState.
func (in *DelayState) DeepCopy() *DelayState {
	if in == nil {
		return nil
	}
	out := new(DelayState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *End) DeepCopyInto(out *End) {
	*out = *in
	if in.ProduceEvents != nil {
		in, out := &in.ProduceEvents, &out.ProduceEvents
		*out = make([]ProduceEvent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContinueAs != nil {
		in, out := &in.ContinueAs, &out.ContinueAs
		*out = new(ContinueAs)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new End.
func (in *End) DeepCopy() *End {
	if in == nil {
		return nil
	}
	out := new(End)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Error) DeepCopyInto(out *Error) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Error.
func (in *Error) DeepCopy() *Error {
	if in == nil {
		return nil
	}
	out := new(Error)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Event) DeepCopyInto(out *Event) {
	*out = *in
	in.Common.DeepCopyInto(&out.Common)
	if in.Correlation != nil {
		in, out := &in.Correlation, &out.Correlation
		*out = make([]Correlation, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Event.
func (in *Event) DeepCopy() *Event {
	if in == nil {
		return nil
	}
	out := new(Event)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventCondition) DeepCopyInto(out *EventCondition) {
	*out = *in
	out.EventDataFilter = in.EventDataFilter
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(Metadata, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(End)
		(*in).DeepCopyInto(*out)
	}
	if in.Transition != nil {
		in, out := &in.Transition, &out.Transition
		*out = new(Transition)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventCondition.
func (in *EventCondition) DeepCopy() *EventCondition {
	if in == nil {
		return nil
	}
	out := new(EventCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventDataFilter) DeepCopyInto(out *EventDataFilter) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventDataFilter.
func (in *EventDataFilter) DeepCopy() *EventDataFilter {
	if in == nil {
		return nil
	}
	out := new(EventDataFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventRef) DeepCopyInto(out *EventRef) {
	*out = *in
	in.Data.DeepCopyInto(&out.Data)
	if in.ContextAttributes != nil {
		in, out := &in.ContextAttributes, &out.ContextAttributes
		*out = make(map[string]Object, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventRef.
func (in *EventRef) DeepCopy() *EventRef {
	if in == nil {
		return nil
	}
	out := new(EventRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventState) DeepCopyInto(out *EventState) {
	*out = *in
	in.BaseState.DeepCopyInto(&out.BaseState)
	if in.OnEvents != nil {
		in, out := &in.OnEvents, &out.OnEvents
		*out = make([]OnEvents, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(EventStateTimeout)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventState.
func (in *EventState) DeepCopy() *EventState {
	if in == nil {
		return nil
	}
	out := new(EventState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventStateTimeout) DeepCopyInto(out *EventStateTimeout) {
	*out = *in
	if in.StateExecTimeout != nil {
		in, out := &in.StateExecTimeout, &out.StateExecTimeout
		*out = new(StateExecTimeout)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventStateTimeout.
func (in *EventStateTimeout) DeepCopy() *EventStateTimeout {
	if in == nil {
		return nil
	}
	out := new(EventStateTimeout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachState) DeepCopyInto(out *ForEachState) {
	*out = *in
	in.BaseState.DeepCopyInto(&out.BaseState)
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(intstr.IntOrString)
		**out = **in
	}
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]Action, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(ForEachStateTimeout)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachState.
func (in *ForEachState) DeepCopy() *ForEachState {
	if in == nil {
		return nil
	}
	out := new(ForEachState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachStateTimeout) DeepCopyInto(out *ForEachStateTimeout) {
	*out = *in
	if in.StateExecTimeout != nil {
		in, out := &in.StateExecTimeout, &out.StateExecTimeout
		*out = new(StateExecTimeout)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachStateTimeout.
func (in *ForEachStateTimeout) DeepCopy() *ForEachStateTimeout {
	if in == nil {
		return nil
	}
	out := new(ForEachStateTimeout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Function) DeepCopyInto(out *Function) {
	*out = *in
	in.Common.DeepCopyInto(&out.Common)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Function.
func (in *Function) DeepCopy() *Function {
	if in == nil {
		return nil
	}
	out := new(Function)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionRef) DeepCopyInto(out *FunctionRef) {
	*out = *in
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = make(map[string]Object, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionRef.
func (in *FunctionRef) DeepCopy() *FunctionRef {
	if in == nil {
		return nil
	}
	out := new(FunctionRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InjectState) DeepCopyInto(out *InjectState) {
	*out = *in
	in.BaseState.DeepCopyInto(&out.BaseState)
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make(map[string]Object, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(InjectStateTimeout)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InjectState.
func (in *InjectState) DeepCopy() *InjectState {
	if in == nil {
		return nil
	}
	out := new(InjectState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InjectStateTimeout) DeepCopyInto(out *InjectStateTimeout) {
	*out = *in
	if in.StateExecTimeout != nil {
		in, out := &in.StateExecTimeout, &out.StateExecTimeout
		*out = new(StateExecTimeout)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InjectStateTimeout.
func (in *InjectStateTimeout) DeepCopy() *InjectStateTimeout {
	if in == nil {
		return nil
	}
	out := new(InjectStateTimeout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in Metadata) DeepCopyInto(out *Metadata) {
	{
		in := &in
		*out = make(Metadata, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Metadata.
func (in Metadata) DeepCopy() Metadata {
	if in == nil {
		return nil
	}
	out := new(Metadata)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OAuth2AuthProperties) DeepCopyInto(out *OAuth2AuthProperties) {
	*out = *in
	in.BaseAuthProperties.DeepCopyInto(&out.BaseAuthProperties)
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Audiences != nil {
		in, out := &in.Audiences, &out.Audiences
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OAuth2AuthProperties.
func (in *OAuth2AuthProperties) DeepCopy() *OAuth2AuthProperties {
	if in == nil {
		return nil
	}
	out := new(OAuth2AuthProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Object) DeepCopyInto(out *Object) {
	*out = *in
	if in.IObject != nil {
		out.IObject = in.IObject.DeepCopyIObject()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Object.
func (in *Object) DeepCopy() *Object {
	if in == nil {
		return nil
	}
	out := new(Object)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnError) DeepCopyInto(out *OnError) {
	*out = *in
	if in.ErrorRefs != nil {
		in, out := &in.ErrorRefs, &out.ErrorRefs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Transition != nil {
		in, out := &in.Transition, &out.Transition
		*out = new(Transition)
		(*in).DeepCopyInto(*out)
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(End)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnError.
func (in *OnError) DeepCopy() *OnError {
	if in == nil {
		return nil
	}
	out := new(OnError)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnEvents) DeepCopyInto(out *OnEvents) {
	*out = *in
	if in.EventRefs != nil {
		in, out := &in.EventRefs, &out.EventRefs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]Action, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.EventDataFilter = in.EventDataFilter
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnEvents.
func (in *OnEvents) DeepCopy() *OnEvents {
	if in == nil {
		return nil
	}
	out := new(OnEvents)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationState) DeepCopyInto(out *OperationState) {
	*out = *in
	in.BaseState.DeepCopyInto(&out.BaseState)
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]Action, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(OperationStateTimeout)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationState.
func (in *OperationState) DeepCopy() *OperationState {
	if in == nil {
		return nil
	}
	out := new(OperationState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationStateTimeout) DeepCopyInto(out *OperationStateTimeout) {
	*out = *in
	if in.StateExecTimeout != nil {
		in, out := &in.StateExecTimeout, &out.StateExecTimeout
		*out = new(StateExecTimeout)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationStateTimeout.
func (in *OperationStateTimeout) DeepCopy() *OperationStateTimeout {
	if in == nil {
		return nil
	}
	out := new(OperationStateTimeout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParallelState) DeepCopyInto(out *ParallelState) {
	*out = *in
	in.BaseState.DeepCopyInto(&out.BaseState)
	if in.Branches != nil {
		in, out := &in.Branches, &out.Branches
		*out = make([]Branch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.NumCompleted = in.NumCompleted
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(ParallelStateTimeout)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParallelState.
func (in *ParallelState) DeepCopy() *ParallelState {
	if in == nil {
		return nil
	}
	out := new(ParallelState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParallelStateTimeout) DeepCopyInto(out *ParallelStateTimeout) {
	*out = *in
	if in.StateExecTimeout != nil {
		in, out := &in.StateExecTimeout, &out.StateExecTimeout
		*out = new(StateExecTimeout)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParallelStateTimeout.
func (in *ParallelStateTimeout) DeepCopy() *ParallelStateTimeout {
	if in == nil {
		return nil
	}
	out := new(ParallelStateTimeout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProduceEvent) DeepCopyInto(out *ProduceEvent) {
	*out = *in
	if in.ContextAttributes != nil {
		in, out := &in.ContextAttributes, &out.ContextAttributes
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProduceEvent.
func (in *ProduceEvent) DeepCopy() *ProduceEvent {
	if in == nil {
		return nil
	}
	out := new(ProduceEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Retry) DeepCopyInto(out *Retry) {
	*out = *in
	if in.Multiplier != nil {
		in, out := &in.Multiplier, &out.Multiplier
		*out = new(floatstr.Float32OrString)
		**out = **in
	}
	out.MaxAttempts = in.MaxAttempts
	out.Jitter = in.Jitter
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Retry.
func (in *Retry) DeepCopy() *Retry {
	if in == nil {
		return nil
	}
	out := new(Retry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Schedule) DeepCopyInto(out *Schedule) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(Cron)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Schedule.
func (in *Schedule) DeepCopy() *Schedule {
	if in == nil {
		return nil
	}
	out := new(Schedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in Secrets) DeepCopyInto(out *Secrets) {
	{
		in := &in
		*out = make(Secrets, len(*in))
		copy(*out, *in)
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Secrets.
func (in Secrets) DeepCopy() Secrets {
	if in == nil {
		return nil
	}
	out := new(Secrets)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sleep) DeepCopyInto(out *Sleep) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sleep.
func (in *Sleep) DeepCopy() *Sleep {
	if in == nil {
		return nil
	}
	out := new(Sleep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SleepState) DeepCopyInto(out *SleepState) {
	*out = *in
	in.BaseState.DeepCopyInto(&out.BaseState)
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(SleepStateTimeout)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SleepState.
func (in *SleepState) DeepCopy() *SleepState {
	if in == nil {
		return nil
	}
	out := new(SleepState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SleepStateTimeout) DeepCopyInto(out *SleepStateTimeout) {
	*out = *in
	if in.StateExecTimeout != nil {
		in, out := &in.StateExecTimeout, &out.StateExecTimeout
		*out = new(StateExecTimeout)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SleepStateTimeout.
func (in *SleepStateTimeout) DeepCopy() *SleepStateTimeout {
	if in == nil {
		return nil
	}
	out := new(SleepStateTimeout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Start) DeepCopyInto(out *Start) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(Schedule)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Start.
func (in *Start) DeepCopy() *Start {
	if in == nil {
		return nil
	}
	out := new(Start)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StateDataFilter) DeepCopyInto(out *StateDataFilter) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StateDataFilter.
func (in *StateDataFilter) DeepCopy() *StateDataFilter {
	if in == nil {
		return nil
	}
	out := new(StateDataFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StateExecTimeout) DeepCopyInto(out *StateExecTimeout) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StateExecTimeout.
func (in *StateExecTimeout) DeepCopy() *StateExecTimeout {
	if in == nil {
		return nil
	}
	out := new(StateExecTimeout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SwitchState) DeepCopyInto(out *SwitchState) {
	*out = *in
	in.BaseState.DeepCopyInto(&out.BaseState)
	in.DefaultCondition.DeepCopyInto(&out.DefaultCondition)
	if in.EventConditions != nil {
		in, out := &in.EventConditions, &out.EventConditions
		*out = make([]EventCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataConditions != nil {
		in, out := &in.DataConditions, &out.DataConditions
		*out = make([]DataCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(SwitchStateTimeout)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SwitchState.
func (in *SwitchState) DeepCopy() *SwitchState {
	if in == nil {
		return nil
	}
	out := new(SwitchState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SwitchStateTimeout) DeepCopyInto(out *SwitchStateTimeout) {
	*out = *in
	if in.StateExecTimeout != nil {
		in, out := &in.StateExecTimeout, &out.StateExecTimeout
		*out = new(StateExecTimeout)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SwitchStateTimeout.
func (in *SwitchStateTimeout) DeepCopy() *SwitchStateTimeout {
	if in == nil {
		return nil
	}
	out := new(SwitchStateTimeout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Timeouts) DeepCopyInto(out *Timeouts) {
	*out = *in
	if in.WorkflowExecTimeout != nil {
		in, out := &in.WorkflowExecTimeout, &out.WorkflowExecTimeout
		*out = new(WorkflowExecTimeout)
		**out = **in
	}
	if in.StateExecTimeout != nil {
		in, out := &in.StateExecTimeout, &out.StateExecTimeout
		*out = new(StateExecTimeout)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Timeouts.
func (in *Timeouts) DeepCopy() *Timeouts {
	if in == nil {
		return nil
	}
	out := new(Timeouts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Transition) DeepCopyInto(out *Transition) {
	*out = *in
	if in.ProduceEvents != nil {
		in, out := &in.ProduceEvents, &out.ProduceEvents
		*out = make([]ProduceEvent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Transition.
func (in *Transition) DeepCopy() *Transition {
	if in == nil {
		return nil
	}
	out := new(Transition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workflow) DeepCopyInto(out *Workflow) {
	*out = *in
	in.BaseWorkflow.DeepCopyInto(&out.BaseWorkflow)
	if in.States != nil {
		in, out := &in.States, &out.States
		*out = make([]State, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				(*out)[i] = (*in)[i].DeepCopyState()
			}
		}
	}
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]Event, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Functions != nil {
		in, out := &in.Functions, &out.Functions
		*out = make([]Function, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = make([]Retry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workflow.
func (in *Workflow) DeepCopy() *Workflow {
	if in == nil {
		return nil
	}
	out := new(Workflow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowExecTimeout) DeepCopyInto(out *WorkflowExecTimeout) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowExecTimeout.
func (in *WorkflowExecTimeout) DeepCopy() *WorkflowExecTimeout {
	if in == nil {
		return nil
	}
	out := new(WorkflowExecTimeout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowRef) DeepCopyInto(out *WorkflowRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowRef.
func (in *WorkflowRef) DeepCopy() *WorkflowRef {
	if in == nil {
		return nil
	}
	out := new(WorkflowRef)
	in.DeepCopyInto(out)
	return out
}
